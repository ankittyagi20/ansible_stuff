---
# tasks file for ec2

- name: Generate key if doesnot exist
  ec2_key:
    name: "{{ key_name }}"
    region: "{{ region }}"
  register: key
  when: inventory_hostname in groups['localhost']

- name: Creating EC2 security group
  ec2_group:
    name: access
    description: EC2 security group for ssh access
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
  connection: local
  register: sec_group
  when: inventory_hostname in groups['localhost']

- name: Create EC2 machine
  ec2:
    key_name: "{{ key_name }}"
    region: "{{ region }}"
    group: access
    instance_type: "{{ instance_type }}"
    image: "{{ ami_id }}"
    wait: yes
    wait_timeout: 500
    count: "{{ instance_count }}"
    volumes:
    - device_name: /dev/sda1
      volume_size: "{{ root_volume_size }}"
      delete_on_termination: "{{ delete_volume }}"
    instance_tags:
      Name: "aws-poc-{{ environment }}"
    vpc_subnet_id: "{{ monitoring_host_subnet_id }}"
    assign_public_ip: yes
  register: ins
  when: inventory_hostname in groups['localhost']

- name: Populate inventory
  lineinfile:
    dest: "/Users/ankityag/automation/ansible_stuff/prometheus-grafana/ansible-environments/hosts"
    insertafter: '\[prom\]'
    line: "{{ item.public_ip }}"
    state: present
  with_items:
    - "{{ ins.instances }}"
  when: inventory_hostname in groups['localhost']
  register: var

- debug: var=var

- name: Wait for SSH on instances to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    delay: 60
    timeout: 600
    state: started
  with_items:
    - "{{ ins.instances }}"
  when: ins is defined

